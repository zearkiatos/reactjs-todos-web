{"version":3,"sources":["Todos/Infrastructure/LocalStorageTodosRespository.js","Todos/Domain/TodosRepository.js","hooks/useTodosLocalStorageRepository/index.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/TodoItem/index.js","components/TodoItems/index.js","components/CreateTodoButton/index.js","components/UI/index.js","components/App.js","index.js"],"names":["LocalStorageTodosRepository","storageName","todosStorage","find","save","todo","localStorage","setItem","this","JSON","stringify","todos","getItem","parse","Error","useTodosLocalStorageRepository","itemName","localStorageTodosRepository","items","TodoCounter","total","completed","className","TodoSearch","searchValue","setSearchValue","placeholder","value","onChange","event","target","console","log","TodoList","children","TodoItem","text","onComplete","onDelete","onClick","TodoItems","props","setTodos","map","saveItems","alert","todoMapped","newTodos","filter","renderTodoItems","CreateTodoButton","type","UI","totalTodos","completedTodos","todosFiltered","App","useState","length","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e145437.chunk.js","sourcesContent":["import TodosRepository from \"../Domain/TodosRepository\";\nclass LocalStorageTodosRepository extends TodosRepository {\n    constructor(storageName) {\n        super()\n        this.storageName = storageName;\n        const todosStorage = this.find();\n        this.save(todosStorage);\n    }\n\n    save(todo) {\n        localStorage.setItem(this.storageName, JSON.stringify(todo));\n    }\n\n    find() {\n        const todos = localStorage.getItem(this.storageName) || '[]';\n        const todosParsed = JSON.parse(todos);\n        return todosParsed;\n    }\n}\n\nexport default LocalStorageTodosRepository;","class TodosRepository {\n  save(todo) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  find() {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  remove(todo) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n}\n\nexport default TodosRepository;\n","import LocalStorageTodosRepository from \"../../Todos/Infrastructure/LocalStorageTodosRespository\";\n\nconst useTodosLocalStorageRepository = (itemName) => {\n  let localStorageTodosRepository = new LocalStorageTodosRepository(itemName);\n\n  let items = localStorageTodosRepository.find();\n\n  const saveItems = (items) => localStorageTodosRepository.save(items);\n\n  return [items, saveItems];\n};\n\nexport default useTodosLocalStorageRepository;\n","import React from \"react\";\nimport \"./todoCounter.css\";\n\nconst TodoCounter = ({ total, completed }) => {\n  return (\n    <h2 className=\"todo-counter\">\n      You've completed {completed} of {total} TODOs ✅\n    </h2>\n  );\n};\n\nexport default TodoCounter;\n","import React from \"react\";\nimport \"./todoSearch.css\";\nconst TodoSearch = ({ searchValue, setSearchValue }) => {\n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n    console.log(searchValue);\n  };\n  return (\n    <input\n      className=\"todo-search\"\n      placeholder=\"Search TODOs 📝\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n};\n\nexport default TodoSearch;\n","import \"./todoList.css\";\nconst TodoList = ({ children }) => {\n  return (\n    <section>\n      <ul>{children}</ul>\n    </section>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./todoItem.css\";\nconst TodoItem = ({ text, completed, onComplete, onDelete }) => {\n  return (\n    <li className=\"todo-item\">\n      <span\n        className={`icon icon-check ${completed && \"icon-check-active\"}`}\n        onClick={() => onComplete(text, completed)}\n      >\n        ✅\n      </span>\n      <p className={`todo-item-p ${completed && \"todo-item-p-complete\"}`}>\n        {text}\n      </p>\n      <span\n        className=\"icon icon-delete\"\n        onClick={() => onDelete(text)}\n      >\n        x\n      </span>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"../TodoItem\";\nimport useTodosLocalStorageRepository from '../../hooks/useTodosLocalStorageRepository';\n\nconst renderTodoItems = ({ todos, setTodos }) =>\n  todos\n    ? todos.map((todo) => {\n        const [ items, saveItems ] = useTodosLocalStorageRepository(\"TODOS\");\n        console.log(saveItems);\n        const onComplete = (text, completed) => {\n          alert(`You complete the todo ${text}`);\n          const todoMapped = todos.map((todo) =>\n            todo.text === text\n              ? {\n                  text,\n                  completed: !completed,\n                }\n              : todo\n          );\n          setTodos(todoMapped);\n          saveItems(todoMapped);\n        };\n\n        const onDelete = (text) => {\n          let newTodos = todos.filter((todo) => todo.text !== text);\n          setTodos(newTodos);\n          saveItems(newTodos);\n        };\n\n        return (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={onComplete}\n            onDelete={onDelete}\n          />\n        );\n      })\n    : \"\";\n\nconst TodoItems = (props) => renderTodoItems(props);\n\nexport default TodoItems;\n","import React from \"react\";\nimport \"./createTodoButton.css\";\nconst CreateTodoButton = () => {\n  const onClick = () => alert('Here should open the modal');\n  return (\n    <button\n      className=\"create-todo-button\"\n      type=\"button\"\n      onClick={onClick}\n    >\n      +\n    </button>\n  );\n};\n\nexport default CreateTodoButton;\n","import React, { Fragment } from \"react\";\nimport TodoCounter from \"../TodoCounter\";\nimport TodoSearch from \"../TodoSearch\";\nimport TodoList from \"../TodoList\";\nimport TodoItems from \"../TodoItems\";\nimport CreateTodoButton from \"../CreateTodoButton\";\n\nconst UI = ({\n  totalTodos,\n  completedTodos,\n  searchValue,\n  todosFiltered,\n  setSearchValue,\n  setTodos,\n}) => {\n  return (\n    <Fragment>\n      <TodoCounter total={totalTodos} completed={completedTodos} />\n      <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n      <TodoList>\n        <TodoItems todos={todosFiltered} setTodos={setTodos} />\n      </TodoList>\n      <CreateTodoButton />\n    </Fragment>\n  );\n};\n\nexport default UI;\n","import React, { useState } from 'react';\nimport useTodosLocalStorageRepository from '../hooks/useTodosLocalStorageRepository';\nimport UI from './UI';\n\nconst App = () => {\n  const [ items ] = useTodosLocalStorageRepository('TODOS');\n  const [searchValue, setSearchValue] = useState('');\n  const [todos, setTodos] = useState(items);\n  const completedTodos = todos.filter(todo => todo.completed).length;\n  const totalTodos = todos.length;\n  let todosFiltered = todos\n  if (searchValue)\n    todosFiltered = items.filter(todo => todo.text.toLowerCase().includes(searchValue));\n  return (\n    <UI\n      setSearchValue={setSearchValue}\n      setTodos={setTodos}\n      completedTodos={completedTodos}\n      totalTodos={totalTodos}\n      todosFiltered={todosFiltered}\n      searchValue={searchValue}\n    />\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}