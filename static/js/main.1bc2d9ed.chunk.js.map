{"version":3,"sources":["components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/TodoItem/index.js","Todos/Infrastructure/LocalStorageTodosRespository.js","Todos/Domain/TodosRepository.js","components/TodoItems/index.js","components/CreateTodoButton/index.js","components/UI/index.js","components/App.js","index.js"],"names":["TodoCounter","total","completed","className","TodoSearch","searchValue","setSearchValue","placeholder","value","onChange","event","target","console","log","TodoList","children","TodoItem","text","onComplete","onDelete","onClick","LocalStorageTodosRepository","storageName","todosStorage","find","save","todo","localStorage","setItem","this","JSON","stringify","todos","getItem","parse","Error","TodoItems","props","setTodos","map","localStorageTodosRepository","alert","todoMapped","newTodos","filter","renderTodoItems","CreateTodoButton","type","UI","totalTodos","completedTodos","todosFiltered","App","todosParsed","useState","length","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bc2d9ed.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./todoCounter.css\";\n\nconst TodoCounter = ({ total, completed }) => {\n  return (\n    <h2 className=\"todo-counter\">\n      You've completed {completed} of {total} TODOs ✅\n    </h2>\n  );\n};\n\nexport default TodoCounter;\n","import React from \"react\";\nimport \"./todoSearch.css\";\nconst TodoSearch = ({ searchValue, setSearchValue }) => {\n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n    console.log(searchValue);\n  };\n  return (\n    <input\n      className=\"todo-search\"\n      placeholder=\"Search TODOs 📝\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n};\n\nexport default TodoSearch;\n","import \"./todoList.css\";\nconst TodoList = ({ children }) => {\n  return (\n    <section>\n      <ul>{children}</ul>\n    </section>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./todoItem.css\";\nconst TodoItem = ({ text, completed, onComplete, onDelete }) => {\n  return (\n    <li className=\"todo-item\">\n      <span\n        className={`icon icon-check ${completed && \"icon-check-active\"}`}\n        onClick={() => onComplete(text, completed)}\n      >\n        ✅\n      </span>\n      <p className={`todo-item-p ${completed && \"todo-item-p-complete\"}`}>\n        {text}\n      </p>\n      <span\n        className=\"icon icon-delete\"\n        onClick={() => onDelete(text)}\n      >\n        x\n      </span>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import TodosRepository from \"../Domain/TodosRepository\";\nclass LocalStorageTodosRepository extends TodosRepository {\n    constructor(storageName) {\n        super()\n        this.storageName = storageName;\n        const todosStorage = this.find();\n        this.save(todosStorage);\n    }\n\n    save(todo) {\n        localStorage.setItem(this.storageName, JSON.stringify(todo));\n    }\n\n    find() {\n        const todos = localStorage.getItem(this.storageName) || [];\n        const todosParsed = JSON.parse(todos);\n        return todosParsed;\n    }\n}\n\nexport default LocalStorageTodosRepository;","class TodosRepository {\n    save(todo) {\n        throw new Error('Abstract Method has no implementation');\n    }\n\n    find() {\n        throw new Error('Abstract Method has no implementation');\n    }\n}\n\nexport default TodosRepository;","import React from \"react\";\nimport TodoItem from \"../TodoItem\";\nimport LocalStorageTodosRepository from '../../Todos/Infrastructure/LocalStorageTodosRespository';\n\nconst renderTodoItems = ({ todos, setTodos }) =>\n  todos\n    ? todos.map((todo) => {\n        const onComplete = (text, completed) => {\n          const localStorageTodosRepository = new LocalStorageTodosRepository('TODOS');\n          alert(`You complete the todo ${text}`);\n          const todoMapped = todos.map((todo) =>\n            todo.text === text\n              ? {\n                  text,\n                  completed: !completed,\n                }\n              : todo\n          );\n          setTodos(todoMapped);\n          localStorageTodosRepository.save(todoMapped);\n        };\n\n        const onDelete = (text) => {\n          let newTodos = todos.filter((todo) => todo.text !== text);\n          setTodos(newTodos);\n        };\n\n        return (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={onComplete}\n            onDelete={onDelete}\n          />\n        );\n      })\n    : \"\";\n\nconst TodoItems = (props) => renderTodoItems(props);\n\nexport default TodoItems;\n","import React from \"react\";\nimport \"./createTodoButton.css\";\nconst CreateTodoButton = () => {\n  const onClick = () => alert('Here should open the modal');\n  return (\n    <button\n      className=\"create-todo-button\"\n      type=\"button\"\n      onClick={onClick}\n    >\n      +\n    </button>\n  );\n};\n\nexport default CreateTodoButton;\n","import React, { Fragment } from \"react\";\nimport TodoCounter from \"../TodoCounter\";\nimport TodoSearch from \"../TodoSearch\";\nimport TodoList from \"../TodoList\";\nimport TodoItems from \"../TodoItems\";\nimport CreateTodoButton from \"../CreateTodoButton\";\n\nconst UI = ({\n  totalTodos,\n  completedTodos,\n  searchValue,\n  todosFiltered,\n  setSearchValue,\n  setTodos,\n}) => {\n  return (\n    <Fragment>\n      <TodoCounter total={totalTodos} completed={completedTodos} />\n      <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n      <TodoList>\n        <TodoItems todos={todosFiltered} setTodos={setTodos} />\n      </TodoList>\n      <CreateTodoButton />\n    </Fragment>\n  );\n};\n\nexport default UI;\n","import React, { useState } from 'react';\nimport UI from './UI';\nimport LocalStorageTodosRepository from '../Todos/Infrastructure/LocalStorageTodosRespository';\n\nconst App = () => {\n  const localStorageTodosRepository = new LocalStorageTodosRepository('TODOS');\n  let todosParsed = localStorageTodosRepository.find();\n  const [searchValue, setSearchValue] = useState('');\n  const [todos, setTodos] = useState(todosParsed);\n  const completedTodos = todos.filter(todo => todo.completed).length;\n  const totalTodos = todos.length;\n  let todosFiltered = todos\n  if (searchValue)\n    todosFiltered = todosParsed.filter(todo => todo.text.toLowerCase().includes(searchValue));\n  return (\n    <UI\n      setSearchValue={setSearchValue}\n      setTodos={setTodos}\n      completedTodos={completedTodos}\n      totalTodos={totalTodos}\n      todosFiltered={todosFiltered}\n      searchValue={searchValue}\n    />\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}