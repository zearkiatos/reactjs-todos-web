{"version":3,"sources":["components/TodoList/index.js","components/TodoItem/index.js","Todos/Infrastructure/LocalStorageTodosRespository.js","Todos/Domain/TodosRepository.js","hooks/useTodosLocalStorageRepository/index.js","constants/index.js","components/TodoItems/index.js","components/CreateTodoButton/index.js","components/Modal/index.js","components/TodosForm/index.js","components/Error/index.js","components/Loading/index.js","components/EmptyTodos/index.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoHeader/index.js","components/StorageChangeAlert/withStorageListener.js","components/Refresh/index.js","components/StorageChangeAlert/index.js","components/App.js","hooks/useTodos/index.js","index.js"],"names":["TodoList","children","error","loading","showEmptyTodos","showRender","showEmptySearchResults","onError","onLoading","onEmptyTodos","onEmptySearchResults","render","className","TodoItem","text","completed","onComplete","onDelete","onClick","LocalStorageTodosRepository","storageName","todosStorage","find","save","todos","localStorage","setItem","this","JSON","stringify","todo","getItem","todosParsed","parse","newTodos","Error","useTodosLocalStorageRepository","itemName","localStorageTodosRepository","ex","add","constants","STORAGE_NAME","TodoItems","props","setTodos","map","alert","todoMapped","filter","console","log","renderTodoItems","CreateTodoButton","setOpenModal","type","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodosForm","addTodos","useState","newTodo","setTodo","onSubmit","event","preventDefault","value","onChange","target","placeholder","message","Loading","quantity","skeletons","item","push","renderLoading","EmptyTodos","TodoCounter","totalTodos","completedTodos","TodoSearch","searchValue","setSearchValue","disabled","TodoHeader","React","Children","toArray","child","cloneElement","withStorageListener","WrappedComponent","sincronizeTodos","storageChange","setStorageChange","window","addEventListener","change","key","show","toggleShow","Refresh","ChangeAlertWithStorageListener","openModal","App","setLoading","setError","setTotalTodos","sincronizedItems","setSincronizedItem","todosFound","setTimeout","useEffect","setTodosFiltered","todosFiltered","length","toLowerCase","includes","sincronize","useTodos"],"mappings":"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","file":"static/js/main.c7bdb6f7.chunk.js","sourcesContent":["import \"./todoList.css\";\nconst TodoList = ({\n  children,\n  error,\n  loading,\n  showEmptyTodos,\n  showRender,\n  showEmptySearchResults,\n  onError,\n  onLoading,\n  onEmptyTodos,\n  onEmptySearchResults,\n  render\n}) => {\n  return (\n    <section className=\"todolist-container\">\n      {error && onError()}\n      {loading && onLoading()}\n      {showEmptyTodos && onEmptyTodos()}\n      {showEmptySearchResults && onEmptySearchResults()}\n      {showRender && render()}\n      <ul>{children}</ul>\n    </section>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./todoItem.css\";\nconst TodoItem = ({ text, completed, onComplete, onDelete }) => {\n  return (\n    <li className=\"todo-item\">\n      <span\n        className={`icon icon-check ${completed && \"icon-check-active\"}`}\n        onClick={() => onComplete(text, completed)}\n      >\n        ✅\n      </span>\n      <p className={`todo-item-p ${completed && \"todo-item-p-complete\"}`}>\n        {text}\n      </p>\n      <span className=\"icon icon-pin\"\n        onClick={() => onDelete(text)}>\n        📌\n      </span>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import TodosRepository from \"../Domain/TodosRepository\";\nclass LocalStorageTodosRepository extends TodosRepository {\n    constructor(storageName) {\n        super()\n        this.storageName = storageName;\n        const todosStorage = this.find();\n        this.save(todosStorage);\n    }\n\n    save(todos) {\n        localStorage.setItem(this.storageName, JSON.stringify(todos));\n    }\n\n    add(todo) {\n        const todos = localStorage.getItem(this.storageName) || '[]';\n        const todosParsed = JSON.parse(todos);\n        const newTodos = [...todosParsed, {\n            completed: false,\n            text: todo.text\n        }];\n        localStorage.setItem(this.storageName, JSON.stringify(newTodos));\n        return newTodos;\n    }\n\n    find() {\n        const todos = localStorage.getItem(this.storageName) || '[]';\n        const todosParsed = JSON.parse(todos);\n        return todosParsed;\n    }\n}\n\nexport default LocalStorageTodosRepository;","class TodosRepository {\n  save(todo) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  find() {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  remove(todo) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n}\n\nexport default TodosRepository;\n","import LocalStorageTodosRepository from \"../../Todos/Infrastructure/LocalStorageTodosRespository\";\n\nconst useTodosLocalStorageRepository = (itemName) => {\n  let localStorageTodosRepository = new LocalStorageTodosRepository(itemName);\n  const save = (todos) => {\n    try {\n      localStorageTodosRepository.save(todos);\n    } catch (ex) {\n      throw ex;\n    }\n  };\n\n  const add = (todo) => {\n    try {\n      const newTodos = localStorageTodosRepository.add(todo);\n      return newTodos;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  const find = () => {\n    try {\n      const todos = localStorageTodosRepository.find();\n      return todos;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n\n  return { save, find, add };\n};\n\nexport default useTodosLocalStorageRepository;\n","const constants = {\n    STORAGE_NAME: 'TODOS'\n}\n\nexport default constants;","import React from \"react\";\nimport TodoItem from \"../TodoItem\";\nimport useTodosLocalStorageRepository from '../../hooks/useTodosLocalStorageRepository';\nimport constants from '../../constants'\n\nconst renderTodoItems = ({ todos, setTodos }) =>\n  todos\n    ? todos.map((todo) => {\n        const { save } = useTodosLocalStorageRepository(constants.STORAGE_NAME);\n        const onComplete = (text, completed) => {\n          alert(`You complete the todo ${text}`);\n          const todoMapped = todos.map((todo) =>\n            todo.text === text\n              ? {\n                  text,\n                  completed: !completed,\n                }\n              : todo\n          );\n          setTodos(todoMapped);\n          save(todoMapped);\n        };\n\n        const onDelete = (text) => {\n          let newTodos = todos.filter((todo) => todo.text !== text);\n          console.log(newTodos);\n          setTodos(newTodos);\n          save(newTodos);\n        };\n\n        return (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={onComplete}\n            onDelete={onDelete}\n          />\n        );\n      })\n    : \"\";\n\nconst TodoItems = (props) => renderTodoItems(props);\n\nexport default TodoItems;\n","import React from \"react\";\nimport \"./createTodoButton.css\";\nconst CreateTodoButton = ({ setOpenModal }) => {\n  const onClick = () => setOpenModal(prevState => !prevState);\n  return (\n    <button\n      className=\"create-todo-button\"\n      type=\"button\"\n      onClick={onClick}\n    >\n      +\n    </button>\n  );\n};\n\nexport default CreateTodoButton;\n","import ReactDOM from \"react-dom\";\nimport './Modal.css'\n\nconst Modal = ({ children }) => (ReactDOM.createPortal(\n    <div className=\"modal-background\">\n        {children}\n    </div>, document.getElementById(\"modal\")));\n\n\n\nexport default Modal;\n","import { useState } from 'react';\nimport './TodoForm.css'\n\nconst TodosForm = ({\n    setTodos,\n    setOpenModal,\n    addTodos\n} ) => {\n    const [newTodo, setTodo] = useState('');\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const todos = addTodos({\n            text: newTodo\n        });\n        setTodos(todos);\n        setOpenModal(false);\n    };\n\n    const onChange = (event) => {\n        setTodo(event.target.value);\n    };\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Write your new TODO ✅</label>\n            <textarea\n                value={newTodo}\n                onChange={onChange}\n                placeholder=\"Add a description of your TODO 📝\"\n            />\n            <div className=\"todo-form-button-container\">\n                <button type=\"submit\" className=\"todo-form-button todo-form-button-add\">Save 💾</button>\n                <button type=\"button\" className=\"todo-form-button todo-form-button-cancel\" onClick={onCancel}>Cancel</button>\n            </div>\n        </form>\n    );\n}\n\nexport default TodosForm;","import { Fragment } from 'react';\nimport './Error.css';\nconst Error = ({ error }) => {\n    return (\n        <Fragment>\n            <h1>Boom! 💣 Something was wrong! 😱...Try again</h1>\n            {error && <div className=\"error-container\">\n                <h3>\n                    Some error description\n                </h3>\n                {error.message && <p>\n                    {error.message}\n                </p>}\n            </div>}\n        </Fragment>\n    )\n}\n\nexport default Error;","import './Loading.css';\nconst Loading = ({ quantity = 3}) => {\n    const renderLoading = () => {\n        const skeletons = [];\n        for (let item = 0; item < quantity; item++) {\n            skeletons.push(<div className=\"loading-container\">\n                <span className=\"complete-icon\">\n                </span>\n                <p className=\"text\">Loading...</p>\n                <span className=\"delete-icon\">\n                </span>\n            </div>)\n        }\n        return skeletons;\n    }\n    return renderLoading();\n}\n\nexport default Loading;","import './EmptyTodos.css';\nconst EmptyTodos = ({ children }) => {\n    return (\n        <div>{children}</div>\n    );\n}\n\nexport default EmptyTodos;","import React from \"react\";\nimport \"./todoCounter.css\";\n\nconst TodoCounter = ({ totalTodos, completedTodos, loading }) => {\n  return (\n    <h2 className={`todo-counter ${loading ? 'loading' : ''}`}>\n      You've completed {completedTodos} of {totalTodos} TODOs ✅\n    </h2>\n  );\n};\n\nexport default TodoCounter;\n","import React from \"react\";\nimport \"./todoSearch.css\";\nconst TodoSearch = ({ searchValue, setSearchValue, loading }) => {\n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n  return (\n    <input\n      className=\"todo-search\"\n      placeholder=\"Search TODOs 📝\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n      disabled={loading}\n    />\n  );\n};\n\nexport default TodoSearch;\n","import React from 'react';\nconst TodoHeader = ({ children, loading }) => {\n    const renderChildren = () => {\n        const childrenFormated = React.Children.toArray(children);\n        return childrenFormated.map(child => React.cloneElement(child, {loading}));\n    };\n    return (\n        <header>\n            {renderChildren()}\n        </header>\n    );\n}\n\nexport default TodoHeader;","import { useState } from \"react\";\nimport constants from '../../constants'\n\nconst withStorageListener = (WrappedComponent) => {\n  return function WrapperComponentWithStorageListener({ sincronizeTodos }) {\n    const [storageChange, setStorageChange] = useState(false);\n    window.addEventListener('storage', (change) => {\n        if(change.key === constants.STORAGE_NAME) {\n            console.log(`It was change in ${constants.STORAGE_NAME}`);\n            setStorageChange(true)\n        }\n    });\n    const toggleShow = () => {\n        sincronizeTodos();\n        setStorageChange(false);\n    }\n    return (\n        <WrappedComponent \n            show={storageChange}\n            toggleShow={toggleShow}\n        />\n    );\n  };\n};\n\n\nexport default withStorageListener;\n","import './Refresh.css'\n\nconst Refresh = ({ onClick }) => {\n    return (\n        <div className=\"refresh-container\">\n        <p>Was Something changed?</p>\n        <button className=\"refresh-button\" onClick={onClick}>\n            Refresh 🔃\n        </button>\n      </div>\n    );\n}\n\n\n\nexport default Refresh;","import React from \"react\";\nimport withStorageListener from \"./withStorageListener\";\nimport Refresh from \"../Refresh\";\nimport Modal from '../Modal';\n\nconst StorageChangeAlert = ({ show, toggleShow }) => {\n  if (show) {\n    const onClickHandle = () => {\n      toggleShow();\n    };\n    return (\n      <Modal openModal={show}>\n        <Refresh onClick={onClickHandle} />\n      </Modal>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst ChangeAlertWithStorageListener = withStorageListener(StorageChangeAlert);\n\nexport { StorageChangeAlert, ChangeAlertWithStorageListener };\n","import React, { Fragment } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoItems from \"./TodoItems\";\nimport CreateTodoButton from \"./CreateTodoButton\";\nimport { useTodos } from \"../hooks/useTodos\";\nimport Modal from \"./Modal\";\nimport TodosForm from \"./TodosForm\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport EmptyTodos from \"./EmptyTodos\";\nimport TodoCounter from \"./TodoCounter\";\nimport TodoSearch from \"./TodoSearch\";\nimport TodoHeader from \"./TodoHeader\";\nimport { ChangeAlertWithStorageListener } from \"./StorageChangeAlert\";\n\nconst App = () => {\n  const {\n    totalTodos,\n    todos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    loading,\n    error,\n    todosFiltered,\n    setTodos,\n    openModal,\n    setOpenModal,\n    addTodos,\n    sincronize: sincronizeTodos\n  } = useTodos();\n  return (\n    <Fragment>\n      <TodoHeader loading={loading}>\n        <TodoCounter totalTodos={totalTodos} completedTodos={completedTodos} />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n      </TodoHeader>\n      <TodoList\n        error={error}\n        loading={loading}\n        showEmptyTodos={!loading && !todos.length}\n        showRender={!loading && todosFiltered}\n        showEmptySearchResults={!totalTodos && todos.length}\n        onError={() => <Error error={error} />}\n        onLoading={() => <Loading quantity=\"5\" />}\n        onEmptyTodos={() => (\n          <EmptyTodos>\n            {\" \"}\n            <p>Create your first TODO</p>{\" \"}\n          </EmptyTodos>\n        )}\n        onEmptySearchResults={() => (\n          <EmptyTodos>\n            <p>There is not result for: {searchValue} </p>\n          </EmptyTodos>\n        )}\n        render={() => <TodoItems todos={todosFiltered} setTodos={setTodos} />}\n      />\n      <CreateTodoButton setOpenModal={setOpenModal} />\n      {!!openModal && (\n        <Modal openModal={openModal}>\n          <TodosForm\n            setTodos={setTodos}\n            setOpenModal={setOpenModal}\n            addTodos={addTodos}\n          />\n        </Modal>\n      )}\n      <ChangeAlertWithStorageListener sincronizeTodos={sincronizeTodos} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport useTodosLocalStorageRepository from \"../useTodosLocalStorageRepository\";\nimport constants from \"../../constants\";\nconst FAKE_LOADING_TIMER = 5000;\n\nconst useTodos = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { add: addTodos, find } = useTodosLocalStorageRepository(\n    constants.STORAGE_NAME\n  );\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n  const [totalTodos, setTotalTodos] = useState(0);\n  const [sincronizedItems, setSincronizedItem] = useState(true);\n  let todosFound = [];\n  try {\n    setTimeout(() => {\n      setLoading(false);\n    }, FAKE_LOADING_TIMER);\n    todosFound = find();\n  } catch (ex) {\n    setError(ex);\n  }\n  useEffect(() => {\n    try {\n      setTimeout(() => {\n        setLoading(false);\n      }, FAKE_LOADING_TIMER);\n      todosFound = find();\n      setTodosFiltered(todosFound);\n      setSincronizedItem(true);\n    } catch (ex) {\n      setError(ex);\n    }\n  }, [sincronizedItems]);\n  const [todos, setTodos] = useState(todosFound);\n\n  const [todosFiltered, setTodosFiltered] = useState(todos);\n\n  let completedTodos = todosFiltered.filter((todo) => todo.completed).length;\n\n  useEffect(() => {\n    const todosFound = todos.filter((todo) =>\n      todo.text.toLowerCase().includes(searchValue.toLowerCase())\n    );\n\n    if (todosFound.length !== todosFiltered.length) {\n      setTodosFiltered(todosFound);\n    }\n  }, [searchValue]);\n\n  useEffect(() => {\n    setTodosFiltered(todos);\n  }, [todos]);\n\n  useEffect(() => {\n    setTotalTodos(todosFiltered.length);\n  }, [todosFiltered]);\n\n  const sincronize = () => {\n    setLoading(true);\n    setSincronizedItem(false);\n  };\n\n  return {\n    loading,\n    error,\n    totalTodos,\n    todos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    todosFiltered,\n    setTodos,\n    openModal,\n    setOpenModal,\n    addTodos,\n    sincronize\n  };\n};\n\nexport { useTodos };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}