{"version":3,"sources":["Todos/Infrastructure/LocalStorageTodosRespository.js","Todos/Domain/TodosRepository.js","hooks/useTodosLocalStorageRepository/index.js","TodoContext/index.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/TodoItem/index.js","components/TodoItems/index.js","components/CreateTodoButton/index.js","components/Modal/index.js","components/TodosForm/index.js","components/Error/index.js","components/Loading/index.js","components/EmptyTodos/index.js","components/UI/index.js","components/App.js","index.js"],"names":["LocalStorageTodosRepository","storageName","todosStorage","find","save","todos","localStorage","setItem","this","JSON","stringify","todo","getItem","todosParsed","parse","newTodos","completed","text","Error","useTodosLocalStorageRepository","itemName","localStorageTodosRepository","ex","add","TodoContext","React","createContext","TodoProvider","props","useState","loading","setLoading","error","setError","searchValue","setSearchValue","openModal","setOpenModal","todosFound","setTimeout","setTodos","todosFiltered","setTodosFiltered","completedTodos","filter","length","totalTodos","useEffect","toLowerCase","includes","Provider","value","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onComplete","onDelete","onClick","TodoItems","map","alert","todoMapped","console","log","renderTodoItems","CreateTodoButton","type","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodosForm","newTodo","setTodo","onSubmit","preventDefault","message","Loading","quantity","skeletons","item","push","renderLoading","EmptyTodos","UI","Consumer","App","render"],"mappings":"gbA+BeA,E,kDA7BX,WAAYC,GAAc,IAAD,uBACrB,gBACKA,YAAcA,EACnB,IAAMC,EAAe,EAAKC,OAHL,OAIrB,EAAKC,KAAKF,GAJW,E,wCAOzB,SAAKG,GACDC,aAAaC,QAAQC,KAAKP,YAAaQ,KAAKC,UAAUL,M,iBAG1D,SAAIM,GACA,IAAMN,EAAQC,aAAaM,QAAQJ,KAAKP,cAAgB,KAClDY,EAAcJ,KAAKK,MAAMT,GACzBU,EAAQ,sBAAOF,GAAP,CAAoB,CAC9BG,WAAW,EACXC,KAAMN,EAAKM,QAGf,OADAX,aAAaC,QAAQC,KAAKP,YAAaQ,KAAKC,UAAUK,IAC/CA,I,kBAGX,WACI,IAAMV,EAAQC,aAAaM,QAAQJ,KAAKP,cAAgB,KAExD,OADoBQ,KAAKK,MAAMT,O,uFCzBrC,SAAKM,GACH,MAAM,IAAIO,MAAM,2C,kBAGlB,WACE,MAAM,IAAIA,MAAM,2C,oBAGlB,SAAOP,GACL,MAAM,IAAIO,MAAM,6C,MCwBLC,EAhCwB,SAACC,GACtC,IAAIC,EAA8B,IAAIrB,EAA4BoB,GA4BlE,MAAO,CAAEhB,KA3BI,SAACC,GACZ,IACEgB,EAA4BjB,KAAKC,GACjC,MAAOiB,GACP,MAAMA,IAuBKnB,KAVF,WACX,IAEE,OADckB,EAA4BlB,OAE1C,MAAOmB,GACP,MAAMA,IAKWC,IAnBT,SAACZ,GACX,IAEE,OADiBU,EAA4BE,IAAIZ,GAEjD,MAAOW,GACP,MAAMA,M,OCdNE,EAAcC,IAAMC,gBAGpBC,EAAe,SAACC,GAAW,IAAD,EACAC,oBAAS,GADT,mBACvBC,EADuB,KACdC,EADc,OAEJF,mBAAS,MAFL,mBAEvBG,EAFuB,KAEhBC,EAFgB,KAGtB9B,EAASgB,EAA+B,SAAxChB,KAHsB,EAIQ0B,mBAAS,IAJjB,mBAIvBK,EAJuB,KAIVC,EAJU,OAKIN,oBAAS,GALb,mBAKvBO,EALuB,KAKZC,EALY,KAM1BC,EAAa,GACjB,IACEC,YAAW,WACTR,GAAW,KAXU,KAavBO,EAAanC,IAEf,MAAOmB,GACLW,EAASX,GAdmB,MAgBJO,mBAASS,GAhBL,mBAgBvBjC,EAhBuB,KAgBhBmC,EAhBgB,OAkBYX,mBAASxB,GAlBrB,mBAkBvBoC,EAlBuB,KAkBRC,EAlBQ,KAoB1BC,EAAiBF,EAAcG,QAAO,SAACjC,GAAD,OAAUA,EAAKK,aAAW6B,OAChEC,EAAaL,EAAcI,OAgB/B,OAdAE,qBAAU,WACR,IAAMT,EAAajC,EAAMuC,QAAO,SAACjC,GAAD,OAC9BA,EAAKM,KAAK+B,cAAcC,SAASf,MAG/BI,EAAWO,SAAWJ,EAAcI,QACtCH,EAAiBJ,KAElB,CAACJ,IAEJa,qBAAU,WACRL,EAAiBrC,KAChB,CAACA,IAGF,cAACmB,EAAY0B,SAAb,CACEC,MAAO,CACLrB,UACAE,QACAc,aACAH,iBACAT,cACAC,iBACAM,gBACAD,WACAJ,YACAC,gBAXJ,SAcGT,EAAMwB,YC7CEC,G,MATK,WAAO,IAAD,EACeC,qBAAW9B,GAA1CsB,EADgB,EAChBA,WAAYH,EADI,EACJA,eACpB,OACE,qBAAIY,UAAU,eAAd,8BACoBZ,EADpB,OACwCG,EADxC,qBCcWU,G,MAlBI,WAAO,IAAD,EAInBF,qBAAW9B,GAFbU,EAFqB,EAErBA,YACAC,EAHqB,EAGrBA,eAKF,OACE,uBACEoB,UAAU,cACVE,YAAY,4BACZN,MAAOjB,EACPwB,SARwB,SAACC,GAC3BxB,EAAewB,EAAMC,OAAOT,YCAjBU,G,MARE,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAClB,OACE,kCACE,6BAAKA,QCwBIU,G,MA1BE,SAAC,GAA+C,IAA7C7C,EAA4C,EAA5CA,KAAMD,EAAsC,EAAtCA,UAAW+C,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC/C,OACE,qBAAIT,UAAU,YAAd,UACE,sBACEA,UAAS,0BAAqBvC,GAAa,qBAC3CiD,QAAS,kBAAMF,EAAW9C,EAAMD,IAFlC,oBAMA,mBAAGuC,UAAS,sBAAiBvC,GAAa,wBAA1C,SACGC,IAEH,sBAAMsC,UAAU,gBACdU,QAAS,kBAAMD,EAAS/C,IAD1B,+BC6BSiD,EAFG,SAACtC,GAAD,OArCM,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,SAAV,OACtBnC,EACIA,EAAM8D,KAAI,SAACxD,GAAU,IACXP,EAASe,EAA+B,SAAxCf,KAsBR,OACE,cAAC,EAAD,CAEEa,KAAMN,EAAKM,KACXD,UAAWL,EAAKK,UAChB+C,WA1Be,SAAC9C,EAAMD,GACxBoD,MAAM,yBAAD,OAA0BnD,IAC/B,IAAMoD,EAAahE,EAAM8D,KAAI,SAACxD,GAAD,OAC3BA,EAAKM,OAASA,EACV,CACEA,OACAD,WAAYA,GAEdL,KAEN6B,EAAS6B,GACTjE,EAAKiE,IAgBHL,SAba,SAAC/C,GAChB,IAAIF,EAAWV,EAAMuC,QAAO,SAACjC,GAAD,OAAUA,EAAKM,OAASA,KACpDqD,QAAQC,IAAIxD,GACZyB,EAASzB,GACTX,EAAKW,KAKEJ,EAAKM,SAQhB,GAEuBuD,CAAgB5C,IC1B9B6C,G,MAbU,SAAC,GAAsB,IAApBpC,EAAmB,EAAnBA,aAE1B,OACE,wBACEkB,UAAU,qBACVmB,KAAK,SACLT,QALY,kBAAM5B,GAAa,SAAAsC,GAAS,OAAKA,MAE/C,iBCKWC,G,MAPD,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SAAH,OAAmByB,IAASC,aACtC,qBAAKvB,UAAU,mBAAf,SACKH,IACG2B,SAASC,eAAe,YCqCrBC,G,MAtCG,WAAO,IAAD,EACOpD,mBAAS,IADhB,mBACbqD,EADa,KACJC,EADI,KAEZ5D,EAAQJ,EAA+B,SAAvCI,IAFY,EAMhB+B,qBAAW9B,GAFXgB,EAJgB,EAIhBA,SACAH,EALgB,EAKhBA,aAiBJ,OACI,uBAAM+C,SAbO,SAACzB,GACdA,EAAM0B,iBACN,IAAMhF,EAAQkB,EAAI,CACdN,KAAMiE,IAEV1C,EAASnC,GACTgC,GAAa,IAOb,UACI,+DACA,0BACIc,MAAO+B,EACPxB,SARK,SAACC,GACdwB,EAAQxB,EAAMC,OAAOT,QAQbM,YAAY,gDAEhB,sBAAKF,UAAU,6BAAf,UACI,wBAAQmB,KAAK,SAASnB,UAAU,wCAAhC,+BACA,wBAAQmB,KAAK,SAASnB,UAAU,2CAA2CU,QAzBtE,WACb5B,GAAa,IAwBL,4BCnBDnB,G,MAhBD,SAAC,GAAe,IAAbc,EAAY,EAAZA,MACb,OACI,eAAC,WAAD,WACI,kGACCA,GAAS,sBAAKuB,UAAU,kBAAf,UACN,wDAGCvB,EAAMsD,SAAW,4BACbtD,EAAMsD,kBCOZC,G,MAjBC,SAAC,GAAqB,IAAD,IAAlBC,gBAAkB,MAAP,EAAO,EAcjC,OAbsB,WAElB,IADA,IAAMC,EAAY,GACTC,EAAO,EAAGA,EAAOF,EAAUE,IAChCD,EAAUE,KAAK,sBAAKpC,UAAU,oBAAf,UACX,sBAAMA,UAAU,kBAEhB,mBAAGA,UAAU,OAAb,wBACA,sBAAMA,UAAU,oBAIxB,OAAOkC,EAEJG,KCVIC,G,MAJI,WACf,OAAO,yDC+CIC,EApCJ,WACT,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACtE,EAAYuE,SAAb,UACG,gBACCjE,EADD,EACCA,QACAE,EAFD,EAECA,MACAS,EAHD,EAGCA,cACAD,EAJD,EAICA,SAJD,OAMC,eAAC,EAAD,WACGR,GAAS,cAAC,EAAD,CAAOA,MAAOA,IACvBF,GAAW,cAAC,EAAD,CAAS0D,SAAS,OAC5B1D,IAAYW,EAAcI,QAAU,cAAC,EAAD,KACpCf,GAAWW,GAAiB,cAAC,EAAD,CAAWpC,MAAOoC,EAAeD,SAAUA,UAK/E,cAAChB,EAAYuE,SAAb,UACG,gBAAG3D,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAd,OACC,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,aAAcA,MAC7BD,GAAa,cAAC,EAAD,CAAOA,UAAWA,EAAlB,SACd,cAAC,EAAD,gBC3BC4D,EARH,WACV,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCFNnB,IAASoB,OAAO,cAAC,EAAD,IAASlB,SAASC,eAAe,W","file":"static/js/main.561b7393.chunk.js","sourcesContent":["import TodosRepository from \"../Domain/TodosRepository\";\nclass LocalStorageTodosRepository extends TodosRepository {\n    constructor(storageName) {\n        super()\n        this.storageName = storageName;\n        const todosStorage = this.find();\n        this.save(todosStorage);\n    }\n\n    save(todos) {\n        localStorage.setItem(this.storageName, JSON.stringify(todos));\n    }\n\n    add(todo) {\n        const todos = localStorage.getItem(this.storageName) || '[]';\n        const todosParsed = JSON.parse(todos);\n        const newTodos = [...todosParsed, {\n            completed: false,\n            text: todo.text\n        }];\n        localStorage.setItem(this.storageName, JSON.stringify(newTodos));\n        return newTodos;\n    }\n\n    find() {\n        const todos = localStorage.getItem(this.storageName) || '[]';\n        const todosParsed = JSON.parse(todos);\n        return todosParsed;\n    }\n}\n\nexport default LocalStorageTodosRepository;","class TodosRepository {\n  save(todo) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  find() {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  remove(todo) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n}\n\nexport default TodosRepository;\n","import LocalStorageTodosRepository from \"../../Todos/Infrastructure/LocalStorageTodosRespository\";\n\nconst useTodosLocalStorageRepository = (itemName) => {\n  let localStorageTodosRepository = new LocalStorageTodosRepository(itemName);\n  const save = (todos) => {\n    try {\n      localStorageTodosRepository.save(todos);\n    } catch (ex) {\n      throw ex;\n    }\n  };\n\n  const add = (todo) => {\n    try {\n      const newTodos = localStorageTodosRepository.add(todo);\n      return newTodos;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  const find = () => {\n    try {\n      const todos = localStorageTodosRepository.find();\n      return todos;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n\n  return { save, find, add };\n};\n\nexport default useTodosLocalStorageRepository;\n","import React, { useState, useEffect } from \"react\";\nimport useTodosLocalStorageRepository from \"../hooks/useTodosLocalStorageRepository\";\n\nconst TodoContext = React.createContext();\nconst FAKE_LOADING_TIMER = 5000;\n\nconst TodoProvider = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { find } = useTodosLocalStorageRepository(\"TODOS\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n  let todosFound = [];\n  try {\n    setTimeout(() => {\n      setLoading(false);\n    }, FAKE_LOADING_TIMER);\n    todosFound = find();\n  }\n  catch (ex) {\n    setError(ex);\n  }\n  const [todos, setTodos] = useState(todosFound);\n\n  const [todosFiltered, setTodosFiltered] = useState(todos);\n\n  let completedTodos = todosFiltered.filter((todo) => todo.completed).length;\n  let totalTodos = todosFiltered.length;\n\n  useEffect(() => {\n    const todosFound = todos.filter((todo) =>\n      todo.text.toLowerCase().includes(searchValue)\n    );\n\n    if (todosFound.length !== todosFiltered.length) {\n      setTodosFiltered(todosFound);\n    }\n  }, [searchValue]);\n\n  useEffect(() => {\n    setTodosFiltered(todos);\n  }, [todos]);\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        todosFiltered,\n        setTodos,\n        openModal,\n        setOpenModal\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n};\n\nexport { TodoContext, TodoProvider };\n","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../../TodoContext\";\nimport \"./todoCounter.css\";\n\nconst TodoCounter = () => {\n  const { totalTodos, completedTodos } = useContext(TodoContext);\n  return (\n    <h2 className=\"todo-counter\">\n      You've completed {completedTodos} of {totalTodos} TODOs ✅\n    </h2>\n  );\n};\n\nexport default TodoCounter;\n","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../../TodoContext\";\nimport \"./todoSearch.css\";\nconst TodoSearch = () => {\n  const {\n    searchValue,\n    setSearchValue\n  } = useContext(TodoContext);\n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n  return (\n    <input\n      className=\"todo-search\"\n      placeholder=\"Search TODOs 📝\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n};\n\nexport default TodoSearch;\n","import \"./todoList.css\";\nconst TodoList = ({ children }) => {\n  return (\n    <section>\n      <ul>{children}</ul>\n    </section>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./todoItem.css\";\nconst TodoItem = ({ text, completed, onComplete, onDelete }) => {\n  return (\n    <li className=\"todo-item\">\n      <span\n        className={`icon icon-check ${completed && \"icon-check-active\"}`}\n        onClick={() => onComplete(text, completed)}\n      >\n        ✅\n      </span>\n      <p className={`todo-item-p ${completed && \"todo-item-p-complete\"}`}>\n        {text}\n      </p>\n      <span className=\"icon icon-pin\"\n        onClick={() => onDelete(text)}>\n        📌\n      </span>\n      {/* <span\n        className=\"icon icon-delete\"\n        onClick={() => onDelete(text)}\n      >\n        x\n      </span> */}\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"../TodoItem\";\nimport useTodosLocalStorageRepository from '../../hooks/useTodosLocalStorageRepository';\n\nconst renderTodoItems = ({ todos, setTodos }) =>\n  todos\n    ? todos.map((todo) => {\n        const { save } = useTodosLocalStorageRepository(\"TODOS\");\n        const onComplete = (text, completed) => {\n          alert(`You complete the todo ${text}`);\n          const todoMapped = todos.map((todo) =>\n            todo.text === text\n              ? {\n                  text,\n                  completed: !completed,\n                }\n              : todo\n          );\n          setTodos(todoMapped);\n          save(todoMapped);\n        };\n\n        const onDelete = (text) => {\n          let newTodos = todos.filter((todo) => todo.text !== text);\n          console.log(newTodos);\n          setTodos(newTodos);\n          save(newTodos);\n        };\n\n        return (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={onComplete}\n            onDelete={onDelete}\n          />\n        );\n      })\n    : \"\";\n\nconst TodoItems = (props) => renderTodoItems(props);\n\nexport default TodoItems;\n","import React from \"react\";\nimport \"./createTodoButton.css\";\nconst CreateTodoButton = ({ setOpenModal }) => {\n  const onClick = () => setOpenModal(prevState => !prevState);\n  return (\n    <button\n      className=\"create-todo-button\"\n      type=\"button\"\n      onClick={onClick}\n    >\n      +\n    </button>\n  );\n};\n\nexport default CreateTodoButton;\n","import ReactDOM from \"react-dom\";\nimport './Modal.css'\n\nconst Modal = ({ children }) => (ReactDOM.createPortal(\n    <div className=\"modal-background\">\n        {children}\n    </div>, document.getElementById(\"modal\")));\n\n\n\nexport default Modal;\n","import { useContext, useState } from 'react';\nimport { TodoContext } from '../../TodoContext';\nimport useTodosLocalStorageRepository from '../../hooks/useTodosLocalStorageRepository';\nimport './TodoForm.css'\n\nconst TodosForm = () => {\n    const [newTodo, setTodo] = useState('');\n    const { add } = useTodosLocalStorageRepository('TODOS')\n    const {\n        setTodos,\n        setOpenModal,\n    } = useContext(TodoContext);\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const todos = add({\n            text: newTodo\n        });\n        setTodos(todos);\n        setOpenModal(false);\n    };\n\n    const onChange = (event) => {\n        setTodo(event.target.value);\n    };\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Write your new TODO ✅</label>\n            <textarea\n                value={newTodo}\n                onChange={onChange}\n                placeholder=\"Add a description of your TODO 📝\"\n            />\n            <div className=\"todo-form-button-container\">\n                <button type=\"submit\" className=\"todo-form-button todo-form-button-add\">Save 💾</button>\n                <button type=\"button\" className=\"todo-form-button todo-form-button-cancel\" onClick={onCancel}>Cancel</button>\n            </div>\n        </form>\n    );\n}\n\nexport default TodosForm;","import { Fragment } from 'react';\nimport './Error.css';\nconst Error = ({ error }) => {\n    return (\n        <Fragment>\n            <h1>Boom! 💣 Something was wrong! 😱...Try again</h1>\n            {error && <div className=\"error-container\">\n                <h3>\n                    Some error description\n                </h3>\n                {error.message && <p>\n                    {error.message}\n                </p>}\n            </div>}\n        </Fragment>\n    )\n}\n\nexport default Error;","import './Loading.css';\nconst Loading = ({ quantity = 3}) => {\n    const renderLoading = () => {\n        const skeletons = [];\n        for (let item = 0; item < quantity; item++) {\n            skeletons.push(<div className=\"loading-container\">\n                <span className=\"complete-icon\">\n                </span>\n                <p className=\"text\">Loading...</p>\n                <span className=\"delete-icon\">\n                </span>\n            </div>)\n        }\n        return skeletons;\n    }\n    return renderLoading();\n}\n\nexport default Loading;","import './EmptyTodos.css';\nconst EmptyTodos = () => {\n    return <p>Create your first TODO</p>;\n}\n\nexport default EmptyTodos;","import React, { Fragment } from \"react\";\nimport TodoCounter from \"../TodoCounter\";\nimport TodoSearch from \"../TodoSearch\";\nimport TodoList from \"../TodoList\";\nimport TodoItems from \"../TodoItems\";\nimport CreateTodoButton from \"../CreateTodoButton\";\nimport { TodoContext } from \"../../TodoContext\";\nimport Modal from '../Modal';\nimport TodosForm from \"../TodosForm\";\nimport Error from '../Error';\nimport Loading from '../Loading';\nimport EmptyTodos from '../EmptyTodos';\n\nconst UI = () => {\n  return (\n    <Fragment>\n      <TodoCounter />\n      <TodoSearch />\n      <TodoContext.Consumer>\n        {({\n          loading,\n          error,\n          todosFiltered,\n          setTodos\n        }) => (\n          <TodoList>\n            {error && <Error error={error} />}\n            {loading && <Loading quantity=\"5\" />}\n            {!loading && !todosFiltered.length && <EmptyTodos />}\n            {!loading && todosFiltered && <TodoItems todos={todosFiltered} setTodos={setTodos} />}\n          </TodoList>\n        )}\n\n      </TodoContext.Consumer>\n      <TodoContext.Consumer>\n        {({ openModal, setOpenModal }) => (\n          <Fragment>\n            <CreateTodoButton setOpenModal={setOpenModal} />\n            {!!openModal && <Modal openModal={openModal}>\n              <TodosForm />\n            </Modal>}\n          </Fragment>\n        )}\n      </TodoContext.Consumer>\n\n    </Fragment>\n  );\n};\n\nexport default UI;\n","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport UI from './UI';\n\nconst App = () => {\n  return (\n    <TodoProvider>\n      <UI/>\n    </TodoProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}